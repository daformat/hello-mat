@use "/styles/lib/mixins";

// The pseudo details component: we're using a div instead to make it easy
// to add support in the editor the day we start working on this again
.details {
  display: block;
  position: relative;

  // The element representing the details summary
  > .summary {
    list-style: none;

    &::marker, &::-webkit-details-marker {
      display: none;
    }

    // ">" icon using svg mask so we can animate the element background-color
    .chevron {
      --size: calc(var(--bullet-size) * 1.2);
      background-color: var(--color-bullet);
      // mitigate firefox bug when animating the rotation:
      box-shadow: inset 0 0 0 2px var(--color-background);
      clip-path: inset(1px);
      content: "";
      display: block;
      height: var(--size);
      left: calc(-1 * var(--size) + 1.5px);
      padding: 0;
      position: absolute;
      top: calc((var(--single-line-height) - var(--size)) / 2);
      transform: rotate(90deg);
      transition: mixins.theme-transition(background-color),
      transform 0.15s ease-in-out;
      -webkit-user-select: none; // stylelint-disable-line
      width: var(--size);

      @include mixins.mask-image(
          url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8.62476 6.87524L11.3753 9.87526L8.62476 12.8752' stroke='%234D4D4D' stroke-width='1.75' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E%0A")
      );

      @include mixins.remove-transition;

      &:focus-visible,
      &:hover {
        background-color: var(--color-bullet-focus);
        outline: none;
      }
    }

    &:focus-visible {
      outline: none;
    }

    &:hover .chevron {
      background-color: var(--color-bullet-focus);
      outline: none;
    }
  }

  // When the details is collapsed (= not `open`)
  &:not([open]), &[data-closing] {
    > .summary {
      > .chevron {
        transform: rotate(0deg);
      }
    }
  }
}
